<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on フロー Spectools</title>
    <link>http://spectools.furo.pro/</link>
    <description>Recent content in Introduction on フロー Spectools</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://spectools.furo.pro/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>B E C</title>
      <link>http://spectools.furo.pro/docs/tools/BEC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/tools/BEC/</guid>
      <description>フロー furoBEC #  The furo build essentials container. #  This container contains all tools you need to work with a furo spec project.
 furoBEC on github
Usage #  Bash mode
docker run -it --rm -v `pwd`:/specs thenorstroem/furo-bec # do your stuff # type exit to quit exit  Command mode
docker run -it --rm -v `pwd`:/specs thenorstroem/furo-bec build   TIPP: If your spectools commands have to access different directories, do not forget to mount them.</description>
    </item>
    
    <item>
      <title>help</title>
      <link>http://spectools.furo.pro/docs/commands/spectools_help-command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/commands/spectools_help-command/</guid>
      <description>spectools help #  Help about any command
Synopsis #  Help provides help for any command in the application. Simply type spectools help [path to command] for full details.
spectools help [command] [flags] Options #   -h, --help help for help Options inherited from parent commands #   --config string config file (default is CWD/.spectools.yaml) SEE ALSO #    spectools	- The furo spec toolkit  Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>http://spectools.furo.pro/docs/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/installation/</guid>
      <description>Installation #  You can install spectools on your local machine. For working with specs only, this is enough. We recommend furoBEC if you have to generate more then &amp;ldquo;just&amp;rdquo; the specs. furoBEC is a docker image which has nearly all dependencies already installed to generate all the additional things you may need to.
Installation with brew #  brew tap theNorstroem/tap brew install spectools  Installation with go #  GO111MODULE=on go get github.</description>
    </item>
    
    <item>
      <title>run</title>
      <link>http://spectools.furo.pro/docs/commands/spectools_run/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/commands/spectools_run/</guid>
      <description>spectools run #  Runs a configured flow.
Synopsis #  Runs a configured flow of spectools commands.
To configure a flow of commands just add a &amp;ldquo;flow&amp;rdquo; in the flows section of your .spectools config. A flow is just a list of commands which gets executed in order
Example Config:
[.spectools] commands: publish_npm: &amp;quot;./scripts/test.sh&amp;quot; flows: type: - cleanTypeProtoDir - muSpec2Spec - TypeSpec2Proto - publish_npm  Command:
This config will run &amp;ldquo;cleanTypeProtoDir&amp;rdquo;, muSpec2Spec&amp;quot;&amp;quot; and &amp;ldquo;TypeSpec2Proto&amp;rdquo; in sequence and calling the command publish_npm</description>
    </item>
    
    <item>
      <title>muSpec2Spec</title>
      <link>http://spectools.furo.pro/docs/commands/spectools_muSpec2Spec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/commands/spectools_muSpec2Spec/</guid>
      <description>spectools muSpec2Spec #  Updates the type specs with the definitions from the type µSpecs.
Synopsis #  The converter will update your type specs and also delete specs and fields if they are not in the µSpec file anymore.
Do not forget to set your µSpec folder in the .spectools config.
spectools muSpec2Spec [flags] Options #   -d, --delete Delete specs which are not in muTypes -h, --help help for muSpec2Spec Options inherited from parent commands #   --config string config file (default is CWD/.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>http://spectools.furo.pro/docs/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/overview/</guid>
      <description>Overview #  A brief overview over the main tasks where spectools / furoc / protoc1 are used for.
We have seen some nice generators like furoc-gen-ddl2 which uses simple type and field extensions to generate mysql DDLs.
A documentation generator furoc-gen-apidocs3 is in development.
 mermaid.initialize({ &#34;flowchart&#34;: { &#34;useMaxWidth&#34;:true }, &#34;theme&#34;: &#34;default&#34; } ) graph TD µSpec(µSpec) Spec([Spec]) µSpec-- spectools --Spec Spec-. spectools .-µSpec someProto[Proto] -- protoc-gen-furo-specs -- µSpec Spec-- spectools --Es6Module Spec-- furoc-gen-apidocs --Docs Spec-- furoc-gen-u33e --U33E U33E-- simple-generator --web-components Spec-- furoc-gen-ddl --ddl[(DDL)] Spec-- spectools --xs[.</description>
    </item>
    
    <item>
      <title>Project Configuration</title>
      <link>http://spectools.furo.pro/docs/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/configuration/</guid>
      <description>Configuration #  Each spec project must have a .spectools configuration file.
A fictive example of a spectools config for a spec project.
spectools:&amp;#34;1.20.0&amp;#34;#Minimal spectools versionspecDir:&amp;#34;./specs&amp;#34;specFormat:&amp;#34;yaml&amp;#34;#set to yaml or jsondependencies:#do not write every type/message again and again. Install them.- &amp;#34;git@github.com:theNorstroem/furoBaseSpecs.git v1.11.8&amp;#34;# The importer looks for all **/*.type.spec files recursive The importer looks for all **/*.service.spec files recursivedependenciesDir:dependencies #directory where the dependencies get installed to.muSpec:types:- &amp;#34;./muspecs/**/*types.yaml&amp;#34;- &amp;#34;./muspecs/*types.yaml&amp;#34;#Use this if you do not put your specs in foldersservices:- &amp;#34;.</description>
    </item>
    
    <item>
      <title>checkImports</title>
      <link>http://spectools.furo.pro/docs/commands/spectools_checkImports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/commands/spectools_checkImports/</guid>
      <description>spectools checkImports #  Checks and correct the imports
Synopsis #  Use this command after moving of types. It will check and correct all imports and update the specs
spectools checkImports [flags] Options #   -h, --help help for checkImports Options inherited from parent commands #   --config string config file (default is CWD/.spectools.yaml) SEE ALSO #    spectools	- The furo spec toolkit  Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>exportAsYaml</title>
      <link>http://spectools.furo.pro/docs/commands/spectools_exportAsYaml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/commands/spectools_exportAsYaml/</guid>
      <description>spectools exportAsYaml #  Exports all specs and the current config in one yaml file to stdout
Synopsis #  Use this for your chain of generators&amp;hellip;
You will get a yaml with all types and services and the config. Feel free to add custom sections in the config to use them in custom commands or scripts.
services: your.Service: ... types: your.type: ... config: module: mod custom: remoteDir: &amp;quot;path/to/somewhere&amp;quot; otherCustomSetting: true  spectools exportAsYaml [flags] Options #   -f, --full Include the ast info -h, --help help for exportAsYaml Options inherited from parent commands #   --config string config file (default is CWD/.</description>
    </item>
    
    <item>
      <title>genMessageProtos</title>
      <link>http://spectools.furo.pro/docs/commands/spectools_genMessageProtos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/commands/spectools_genMessageProtos/</guid>
      <description>spectools genMessageProtos #  Generate the message protos from the type specs.
Synopsis #  The generated proto messages will be generated to the configured path.
.spectools config example
build: proto: targetDir: &amp;quot;./dist/protos&amp;quot; #Hint: add this to your proto include path  spectools genMessageProtos [flags] Options #   -h, --help help for genMessageProtos Options inherited from parent commands #   --config string config file (default is CWD/.spectools.yaml) SEE ALSO #    spectools	- The furo spec toolkit  Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>genServiceProtos</title>
      <link>http://spectools.furo.pro/docs/commands/spectools_genServiceProtos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/commands/spectools_genServiceProtos/</guid>
      <description>spectools genServiceProtos #  Generate service protos from the specs
Synopsis #  The generated proto services will be generated to the configured path.
.spectools config example
build: proto: targetDir: &amp;quot;./dist/proto&amp;quot; #Hint: add this to your proto include path	 spectools genServiceProtos [flags] Options #   -h, --help help for genServiceProtos Options inherited from parent commands #   --config string config file (default is CWD/.spectools.yaml) SEE ALSO #    spectools	- The furo spec toolkit  Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>genEsModule</title>
      <link>http://spectools.furo.pro/docs/commands/spectools_genEsModule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/commands/spectools_genEsModule/</guid>
      <description>spectools genEsModule #  generate es6 spec module
Synopsis #  The furo data objects relys on the server specs.
spectools genEsModule [flags] Options #   -h, --help help for genEsModule Options inherited from parent commands #   --config string config file (default is CWD/.spectools.yaml) SEE ALSO #    spectools	- The furo spec toolkit  Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>muSrvSanitize</title>
      <link>http://spectools.furo.pro/docs/commands/spectools_muSrvSanitize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/commands/spectools_muSrvSanitize/</guid>
      <description>spectools muSrvSanitize #  Sanitize muServices
Synopsis #  Sanitizing includes:
 Adding of query params which are part of the url.  spectools muSrvSanitize [flags] Options #   -h, --help help for muSrvSanitize Options inherited from parent commands #   --config string config file (default is CWD/.spectools.yaml) SEE ALSO #    spectools	- The furo spec toolkit  Auto generated by spf13/cobra on 23-Oct-2020 #  </description>
    </item>
    
    <item>
      <title>spec2muSpec</title>
      <link>http://spectools.furo.pro/docs/commands/spectools_spec2muSpec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/commands/spectools_spec2muSpec/</guid>
      <description>spectools spec2muSpec #  A brief description of your command
Synopsis #  A longer description that spans multiple lines and likely contains examples and usage of using your command. For example:
Cobra is a CLI library for Go that empowers applications. This application is a tool to generate the needed files to quickly create a Cobra application.
spectools spec2muSpec [flags] Options #   -d, --delete Delete muSpecs which not exist in Spec -h, --help help for spec2muSpec Options inherited from parent commands #   --config string config file (default is CWD/.</description>
    </item>
    
    <item>
      <title>install</title>
      <link>http://spectools.furo.pro/docs/commands/spectools_install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/docs/commands/spectools_install/</guid>
      <description>spectools install #  Installs the dependencies
Synopsis #  Installs the configured dependencies from the .spectools config.
Enter the name of the repository and a tag or branch to install. If you want latest (not recommended) add main (master).
dependencies: - &amp;quot;git@github.com:theNorstroem/furoBaseSpecs.git v1.10.9&amp;quot;  It is up to you to add the dependencies to your version control system. We strongly recommend this if you work with packages that are not owned by your organisation.</description>
    </item>
    
    <item>
      <title>Release1.20</title>
      <link>http://spectools.furo.pro/posts/release1.20.1/</link>
      <pubDate>Mon, 16 Nov 2020 13:21:59 +0100</pubDate>
      
      <guid>http://spectools.furo.pro/posts/release1.20.1/</guid>
      <description>1.20.0 #  We should have done the release notes before, so this note will contain a summary of the older releases too.
In the fututre the messages will get smaller then this one.
semver: 1.20.0 #  date: 2020-11-13T10:12:52+01:00
changes: #    9bf9e23970a3b68d969fa45b5c886a1469edc539
note: &#39;feat: genBundledServiceProto to generate all specified services in one file installed services included&#39; breaking: false description: genBundledServiceProto to generate all specified services in one file installed services included    5f2ec401c3e52df09efbb5c444db5e7a274d80b0</description>
    </item>
    
    <item>
      <title>Hey</title>
      <link>http://spectools.furo.pro/posts/hello/</link>
      <pubDate>Sun, 15 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>http://spectools.furo.pro/posts/hello/</guid>
      <description>Initial documentation #  Hi and welcome to the first version of the spectools documentation. If you have some issues, found typos and have suggestions, feel free to open an issue or better make a pull request.</description>
    </item>
    
  </channel>
</rss>
